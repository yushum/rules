name: Generate Rules

permissions:
  contents: write

on:
  schedule:
    - cron: '0 23 * * *'  # 每天 23:00 UTC
  workflow_dispatch:

jobs:
  generate-rules:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # 缓存远程文件以检测变化
      - name: Cache previous remote files
        id: cache-remote
        uses: actions/cache@v3
        with:
          path: |
            old_direct.tmp
            old_proxy.tmp
            old_reject.tmp
            old_steamcn.tmp
          key: remote-files-${{ github.run_id }}
          restore-keys: remote-files-

      # 检测变化（自定义脚本）
      - name: Check for changes
        id: check-changes
        run: |
          # 检查自定义文件变化
          CUSTOM_CHANGED=false
          if [ -d custom ] && git diff --name-only HEAD^ HEAD -- custom/*.list | grep -q .; then
            CUSTOM_CHANGED=true
            echo "Custom files have changed"
          fi

          # 检查远程文件变化
          declare -A urls=(
            [direct]="https://raw.githubusercontent.com/GMOogway/shadowrocket-rules/master/sr_direct_list.module"
            [proxy]="https://raw.githubusercontent.com/GMOogway/shadowrocket-rules/master/sr_proxy_list.module"
            [reject]="https://raw.githubusercontent.com/GMOogway/shadowrocket-rules/master/sr_reject_list.module"
            [steamcn]="https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/SteamCN/SteamCN.list"
          )

          REMOTE_CHANGED=false
          for type in "${!urls[@]}"; do
            curl -s "${urls[$type]}" -o "new_${type}.tmp"
            if [ -f "old_${type}.tmp" ]; then
              if ! cmp -s "old_${type}.tmp" "new_${type}.tmp"; then
                REMOTE_CHANGED=true
                echo "${urls[$type]} has changed"
              fi
            else
              REMOTE_CHANGED=true
              echo "No previous ${type} file found"
            fi
            mv "new_${type}.tmp" "old_${type}.tmp"
          done

          if [ "$CUSTOM_CHANGED" = true ] || [ "$REMOTE_CHANGED" = true ]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      # 如果没有变化或检测失败，则退出
      - name: Exit if no changes
        if: steps.check-changes.outputs.changes_detected != 'true'
        run: |
          if [ "${{ steps.check-changes.outcome }}" = "failure" ]; then
            echo "Change detection failed, assuming changes to be safe"
            exit 1
          else
            echo "No changes detected, skipping build"
            exit 0
          fi

      # 创建目录
      - name: Prepare folders
        run: mkdir -p shadowrocket mihomo custom

      # 下载并处理规则
      - name: Process rules
        run: |
          declare -A urls=(
            [direct]="sr_direct_list.module"
            [proxy]="sr_proxy_list.module"
            [reject]="sr_reject_list.module"
          )
          for type in "${!urls[@]}"; do
            curl -s "https://raw.githubusercontent.com/GMOogway/shadowrocket-rules/master/${urls[$type]}" -o "temp.module"
            sed '1,/^\[Rule\]$/d' temp.module | \
              sed "s/,${type^^}$//" | \
              sed '/^IP-CIDR\|^IP-ASN\|^GEOIP/s/$/,no-resolve/' > "shadowrocket/${type}.list"
            rm temp.module
          done

          # 处理 SteamCN 规则
          curl -s https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/SteamCN/SteamCN.list | \
            grep -v '^#' >> shadowrocket/direct.list
          sort -u shadowrocket/direct.list -o shadowrocket/direct.list

          # 合并自定义规则
          for type in direct proxy reject; do
            if [ -f "custom/${type}.list" ]; then
              grep -v '^#' "custom/${type}.list" >> "shadowrocket/${type}.list"
              sort -u "shadowrocket/${type}.list" -o "shadowrocket/${type}.list"
            fi
          done

          # 高效去重（使用 awk 处理 DOMAIN-SUFFIX 和 DOMAIN 包含关系）
          for file in shadowrocket/*.list; do
            awk -F',' '
              BEGIN {
                delete suffixes; delete domains; delete others;
              }
              /^DOMAIN-SUFFIX,/ {
                suffix = tolower($2);
                suffixes[suffix] = $0;
                next;
              }
              /^DOMAIN,/ {
                domain = tolower($2);
                domains[domain] = $0;
                next;
              }
              { others[$0] = 1; next; }
              END {
                for (domain in domains) {
                  keep = 1;
                  for (suffix in suffixes) {
                    if (domain == suffix || (index(domain, "." suffix) > 0 && domain ~ "[.]" suffix "$")) {
                      keep = 0; break;
                    }
                  }
                  if (keep) filtered_domains[domain] = domains[domain];
                }
                for (suffix in suffixes) {
                  keep = 1;
                  for (s in suffixes) {
                    if (s != suffix && (index(suffix, "." s) > 0 && suffix ~ "[.]" s "$")) {
                      keep = 0; break;
                    }
                  }
                  if (keep) filtered_suffixes[suffix] = suffixes[suffix];
                }
                for (suffix in filtered_suffixes) print filtered_suffixes[suffix];
                for (domain in filtered_domains) print filtered_domains[domain];
                for (other in others) print other;
              }
            ' "$file" | sort -u > temp_file.txt
            mv temp_file.txt "$file"
          done

          # 生成 mihomo 规则
          for type in direct proxy reject; do
            sed 's/^URL-REGEX/^DOMAIN-REGEX/' "shadowrocket/${type}.list" > "mihomo/${type}.list"
          done

      # 使用现成的 git-auto-commit-action 提交更改
      - name: Commit and Push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update rule lists - ${{ github.run_id }} - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          file_pattern: 'shadowrocket/*.list mihomo/*.list'
          skip_dirty_check: false  # 仅在有更改时提交
