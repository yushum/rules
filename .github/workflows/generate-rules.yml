name: Generate Rules

permissions:
  contents: write

on:
  schedule:
    - cron: '0 23 * * *'
  workflow_dispatch:

jobs:
  generate-rules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # 获取最近两次提交以比较变化

      - name: Check for changes in custom files and remote sources
        id: check-changes
        run: |
          # 检查 custom 目录文件变化
          CUSTOM_CHANGED=false
          if git diff HEAD^ HEAD -- custom/*.list | grep -q .; then
            CUSTOM_CHANGED=true
            echo "Custom files have changed"
          fi

          # 检查远程文件变化
          declare -A urls=(
            [direct]="https://raw.githubusercontent.com/GMOogway/shadowrocket-rules/master/sr_direct_list.module"
            [proxy]="https://raw.githubusercontent.com/GMOogway/shadowrocket-rules/master/sr_proxy_list.module"
            [reject]="https://raw.githubusercontent.com/GMOogway/shadowrocket-rules/master/sr_reject_list.module"
            [steamcn]="https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/SteamCN/SteamCN.list"
          )

          REMOTE_CHANGED=false
          for type in "${!urls[@]}"; do
            # 下载当前版本
            curl -s "${urls[$type]}" -o "new_${type}.tmp"
            # 如果本地存在旧版本则比较
            if [ -f "old_${type}.tmp" ]; then
              if ! cmp -s "new_${type}.tmp" "old_${type}.tmp"; then
                REMOTE_CHANGED=true
                echo "${urls[$type]} has changed"
              fi
            else
              REMOTE_CHANGED=true
              echo "No previous ${type} file found, treating as changed"
            fi
            # 保存当前版本为旧版本
            mv "new_${type}.tmp" "old_${type}.tmp"
          done

          # 设置输出变量
          if [ "$CUSTOM_CHANGED" = true ] || [ "$REMOTE_CHANGED" = true ]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi

      - name: Prepare folders
        if: steps.check-changes.outputs.changes_detected == 'true'
        run: mkdir -p shadowrocket mihomo custom

      - name: Download Shadowrocket rule modules
        if: steps.check-changes.outputs.changes_detected == 'true'
        run: |
          declare -A urls=(
            [direct]="sr_direct_list.module"
            [proxy]="sr_proxy_list.module"
            [reject]="sr_reject_list.module"
          )
          for type in "${!urls[@]}"; do
            echo "Downloading ${urls[$type]}"
            curl -s "https://raw.githubusercontent.com/GMOogway/shadowrocket-rules/master/${urls[$type]}" -o "temp.module"
            sed '1,/^\[Rule\]$/d' temp.module | \
              sed "s/,${type^^}$//" | \
              sed '/^IP-CIDR\|^IP-ASN\|^GEOIP/s/$/,no-resolve/' > "shadowrocket/${type}.list"
            rm temp.module
          done

      - name: Merge SteamCN rules into direct.list
        if: steps.check-changes.outputs.changes_detected == 'true'
        run: |
          echo "Merging SteamCN rules..."
          curl -s https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/SteamCN/SteamCN.list -o steamcn.list
          grep -v '^#' steamcn.list >> shadowrocket/direct.list
          sort -u shadowrocket/direct.list -o shadowrocket/direct.list
          rm steamcn.list

      - name: Merge custom rules
        if: steps.check-changes.outputs.changes_detected == 'true'
        run: |
          echo "Merging custom rules..."
          for type in direct proxy reject; do
            if [ -f "custom/${type}.list" ]; then
              echo "Merging custom/${type}.list into shadowrocket/${type}.list"
              grep -v '^#' "custom/${type}.list" >> "shadowrocket/${type}.list"
              sort -u "shadowrocket/${type}.list" -o "shadowrocket/${type}.list"
            else
              echo "No custom/${type}.list found, skipping"
            fi
          done

      - name: Deduplicate DOMAIN vs DOMAIN-SUFFIX
        if: steps.check-changes.outputs.changes_detected == 'true'
        run: |
          echo "Deduplicating $file..."
          for file in shadowrocket/*.list; do
            grep "^DOMAIN-SUFFIX," "$file" | cut -d',' -f2 | tr '[:upper:]' '[:lower:]' > suffixes.txt
            grep "^DOMAIN," "$file" | cut -d',' -f2 | tr '[:upper:]' '[:lower:]' > domains.txt

            cp "$file" temp_file.txt

            while read -r domain; do
              if grep -q "^$domain$" suffixes.txt; then
                sed -i "/^DOMAIN,${domain}$/Id" temp_file.txt
                continue
              fi
              while read -r suffix; do
                if [[ "$domain" == *.$suffix ]]; then
                  sed -i "/^DOMAIN,${domain}$/Id" temp_file.txt
                  break
                fi
              done < suffixes.txt
            done < domains.txt

            sort -fu temp_file.txt > "$file"
            rm -f temp_file.txt suffixes.txt domains.txt
          done

      - name: Convert rules to Mihomo format
        if: steps.check-changes.outputs.changes_detected == 'true'
        run: |
          echo "Converting Shadowrocket rules to Mihomo..."
          for type in direct proxy reject; do
            sed 's/^URL-REGEX/^DOMAIN-REGEX/' "shadowrocket/${type}.list" > "mihomo/${type}.list"
          done

      - name: Commit and Push changes
        if: steps.check-changes.outputs.changes_detected == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add shadowrocket/*.list mihomo/*.list
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update rule lists - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            git push
          fi

      - name: Skip build if no changes
        if: steps.check-changes.outputs.changes_detected == 'false'
        run: echo "No changes detected in source files, skipping build"
