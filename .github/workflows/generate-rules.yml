name: Generate Rules

permissions:
  contents: write

on:
  schedule:
    - cron: '0 23 * * *'  # 每天 23:00 UTC
  workflow_dispatch:

jobs:
  generate-rules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Cache previous remote files
        id: cache-remote
        uses: actions/cache@v3
        with:
          path: |
            old_direct.tmp
            old_proxy.tmp
            old_reject.tmp
            old_steamcn.tmp
          key: remote-files
          restore-keys: remote-files

      - name: Check for changes
        id: check-changes
        run: |
          trap 'echo "changes_detected=true" >> "$GITHUB_OUTPUT"; echo "Error in change detection, assuming changes" >&2' ERR
          set -eo pipefail

          # 1) 检查 custom 目录文件变动
          CUSTOM_CHANGED=false
          if [ -d custom ]; then
            if git rev-parse --verify HEAD^ >/dev/null 2>&1; then
              if git diff --name-only HEAD^ HEAD -- custom/*.list | grep -q .; then
                CUSTOM_CHANGED=true
                echo "Custom files have changed"
              fi
            else
              CUSTOM_CHANGED=true
              echo "No previous commit, assuming custom files changed"
            fi
          fi

          # 2) 拉取远程文件并比对
          declare -A urls=(
            [direct]="https://raw.githubusercontent.com/GMOogway/shadowrocket-rules/master/sr_direct_list.module"
            [proxy]="https://raw.githubusercontent.com/GMOogway/shadowrocket-rules/master/sr_proxy_list.module"
            [reject]="https://raw.githubusercontent.com/GMOogway/shadowrocket-rules/master/sr_reject_list.module"
            [steamcn]="https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/SteamCN/SteamCN.list"
          )
          REMOTE_CHANGED=false
          for type in "${!urls[@]}"; do
            curl -s --max-time 15 --connect-timeout 5 "${urls[$type]}" -o "new_${type}.tmp" || continue
            if [ -f "old_${type}.tmp" ]; then
              if ! cmp -s "old_${type}.tmp" "new_${type}.tmp"; then
                REMOTE_CHANGED=true
                echo "${type} remote changed"
              fi
            else
              REMOTE_CHANGED=true
              echo "No previous ${type} file"
            fi
            mv "new_${type}.tmp" "old_${type}.tmp"
          done

          if [ "$CUSTOM_CHANGED" = true ] || [ "$REMOTE_CHANGED" = true ]; then
            echo "changes_detected=true" >> "$GITHUB_OUTPUT"
          else
            echo "changes_detected=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Exit if no changes
        if: steps.check-changes.outputs.changes_detected != 'true'
        run: |
          echo "No changes detected, skipping build"
          exit 0

      - name: Prepare folders
        run: mkdir -p shadowrocket mihomo custom

      - name: Process base rules
        run: |
          set -eo pipefail
          declare -A urls=(
            [direct]="sr_direct_list.module"
            [proxy]="sr_proxy_list.module"
            [reject]="sr_reject_list.module"
          )
          for type in "${!urls[@]}"; do
            curl -s --max-time 15 --connect-timeout 5 \
              "https://raw.githubusercontent.com/GMOogway/shadowrocket-rules/master/${urls[$type]}" \
              | sed '1,/^\[Rule\]$/d' \
                    -e "s/,${type^^}$//" \
                    -e '/^IP-CIDR\|^IP-ASN\|^GEOIP/s/$/,no-resolve/' \
              > "shadowrocket/${type}.base"
          done

      - name: Merge & dedupe for direct (1 AWK 调用)
        run: |
          # 合并 shadowrocket/direct.base + SteamCN + custom/direct.list
          if [ -f custom/direct.list ]; then
            awk -F',' '
            # 1) 读所有输入，分类存储
            { t=tolower($1); v=$2;
              if (t=="domain")         domains[v]=$0;
              else if (t=="domain-suffix") suffixes[v]=$0;
              else if (t=="url-regex")     regexes[v]=$0;
            }
            END {
              # A. 保留所有 URL-REGEX
              for (r in regexes) print regexes[r];
              # B. DOMAIN-SUFFIX：去重 + 去掉被更通用后缀或任何 regex 覆盖的
              for (s in suffixes) {
                esc=s; gsub(/\./,"\\\\.",esc);
                cov=0;
                # B1. 后缀 vs 后缀
                for (t in suffixes) if (t!=s && (s==t || s~("[.]"+t"$"))) { cov=1; break }
                # B2. 后缀 vs 正则
                if (!cov) for (r in regexes) if (index(r,esc)>0) { cov=1; break }
                if (!cov) print suffixes[s];
              }
              # C. DOMAIN：去掉被任何后缀或 regex 覆盖的
              for (d in domains) {
                cov=0;
                for (s in suffixes) if (d==s || d~("[.]"+s"$")) { cov=1; break }
                if (!cov) {
                  escd=d; gsub(/\./,"\\\\.",escd);
                  for (r in regexes) if (index(r,escd)>0) { cov=1; break }
                }
                if (!cov) print domains[d];
              }
            }
            ' shadowrocket/direct.base <(curl -s --max-time 15 --connect-timeout 5 \
                 https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/SteamCN/SteamCN.list \
                 | grep -v '^#') custom/direct.list \
            > shadowrocket/direct.list
          else
            awk -F',' '
            { t=tolower($1); v=$2;
              if (t=="domain")         domains[v]=$0;
              else if (t=="domain-suffix") suffixes[v]=$0;
              else if (t=="url-regex")     regexes[v]=$0;
            }
            END {
              for (r in regexes) print regexes[r];
              for (s in suffixes) {
                esc=s; gsub(/\./,"\\\\.",esc);
                cov=0;
                for (t in suffixes) if (t!=s && (s==t || s~("[.]"+t"$"))) { cov=1; break }
                if (!cov) for (r in regexes) if (index(r,esc)>0) { cov=1; break }
                if (!cov) print suffixes[s];
              }
              for (d in domains) {
                cov=0;
                for (s in suffixes) if (d==s || d~("[.]"+s"$")) { cov=1; break }
                if (!cov) {
                  escd=d; gsub(/\./,"\\\\.",escd);
                  for (r in regexes) if (index(r,escd)>0) { cov=1; break }
                }
                if (!cov) print domains[d];
              }
            }
            ' shadowrocket/direct.base <(curl -s --max-time 15 --connect-timeout 5 \
                 https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/SteamCN/SteamCN.list \
                 | grep -v '^#') \
            > shadowrocket/direct.list
          fi

      - name: Merge & dedupe for proxy & reject (各 1 AWK 调用)
        run: |
          for type in proxy reject; do
            if [ -f custom/${type}.list ]; then
              awk -F',' '
              { t=tolower($1); v=$2;
                if (t=="domain")         domains[v]=$0;
                else if (t=="domain-suffix") suffixes[v]=$0;
                else if (t=="url-regex")     regexes[v]=$0;
              }
              END {
                for (r in regexes) print regexes[r];
                for (s in suffixes) {
                  esc=s; gsub(/\./,"\\\\.",esc);
                  cov=0;
                  for (t in suffixes) if (t!=s && (s==t || s~("[.]"+t"$"))) { cov=1; break }
                  if (!cov) for (r in regexes) if (index(r,esc)>0) { cov=1; break }
                  if (!cov) print suffixes[s];
                }
                for (d in domains) {
                  cov=0;
                  for (s in suffixes) if (d==s || d~("[.]"+s"$")) { cov=1; break }
                  if (!cov) {
                    escd=d; gsub(/\./,"\\\\.",escd);
                    for (r in regexes) if (index(r,escd)>0) { cov=1; break }
                  }
                  if (!cov) print domains[d];
                }
              }
              ' shadowrocket/${type}.base custom/${type}.list \
              > shadowrocket/${type}.list
            else
              cp shadowrocket/${type}.base shadowrocket/${type}.list
            fi
          done

      - name: Generate mihomo lists
        run: |
          for type in direct proxy reject; do
            sed 's/^URL-REGEX/^DOMAIN-REGEX/' shadowrocket/${type}.list > mihomo/${type}.list
          done

      - name: Set commit message
        id: set-commit-msg
        run: |
          echo "COMMIT_MESSAGE=Update rule lists - $GITHUB_RUN_ID - $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV

      - name: Commit and Push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ env.COMMIT_MESSAGE }}
          file_pattern: 'shadowrocket/*.list mihomo/*.list'
          skip_dirty_check: false

      - name: Clean up temporary files
        run: rm -f old_*.tmp shadowrocket/*.base
